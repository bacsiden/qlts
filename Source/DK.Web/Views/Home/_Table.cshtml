@using DK.Application.Models
@model IEnumerable<TaiSan>
@{
    var canManage = DK.Application.Models.RoleList.GetAll().Any(User.IsInRole);
    var searchModel = ViewBag.SearchModel as DK.Application.Models.TaiSanSearchModel;
    var allViews = ((List<ViewField>)ViewBag.ViewFields).ToList();
    var views = allViews.Where(m => m.Display).ToList();
}

<table class="table mg-b-0" cellspacing="0">
    <tr>
        @if (canManage || !searchModel.IsApproved)
        {
            <th><input type="checkbox" class="checkAll" /></th>
        }
        <th>STT</th>
        @foreach (var item in views)
        {
            <th>@item.DisplayText</th>
        }
    </tr>

    @{
        var stt = 1;
        foreach (var item in Model)
        {
            @BindData(stt, item, canManage, searchModel.IsApproved, true, views);
            if (((TaiSanSearchModel)ViewBag.SearchModel).IncludeSub)
            {
                var childStt = 1;
                foreach (var child in item.Children)
                {
                    @BindData(childStt, child, canManage, searchModel.IsApproved, false, views);
                    childStt++;
                }
            }
            stt++;
        }
    }
</table>

@helper BindData(int stt, TaiSan item, bool canManage, bool isApproved, bool isParent, List<ViewField> views)
{
    var i = 0;
    <tr class="stat even">
        @if (isParent && (canManage || !isApproved))
        {
            <td>
                <input type="checkbox" class="checkitem" value="@item.Id" />
            </td>
        }

        @if (isParent)
        {
            <td class="ac">
                @if (isParent)
                {
                    @stt
                }
            </td>
        }
        else
        {
            <td></td>
        }

        @foreach (var field in views)
        {
            i++;
            if (i <= 2 && isParent)
            {
                <td>
                    <a href="@Url.Action("NewOrEditAsset", new { item.Id, isApproved, returnUrl = Request.RawUrl })">@item.Display(field.FieldName)</a>
                </td>
            }
            else
            {
                <td>@Html.Raw(item.Display(field.FieldName))</td>
            }
        }
    </tr>
}

